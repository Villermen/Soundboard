@import '../easings';
@import '../themes';
@import '../variables';

.modal {
    display: flex;
    position: fixed;
    z-index: 10;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;

    padding: $spacing-base * 2;

    background: rgba(0,0,0,0.6);
    opacity: 0;
    overflow-y: hidden;
    visibility: hidden;
}

.modal--visible {
    opacity: 1;
    overflow-y: scroll;
    visibility: visible;

    transition: opacity 300ms ease, visibility 300ms ease;
}

.modal--hidden {
    transition: opacity 200ms ease, visibility 200ms ease;
    transform: rotate3d(0,0,0,0deg);
}

.modal__dialog {
    width: 100%;
    max-width: 540px;
    margin: auto;

    background: #fff;
    border-radius: $border-radius-base * 2;

    transform: scale(0.8);
    transition: transform 200ms $easeInQuad;

    .modal--visible & {
        transform: scale(1);
        transition: transform 300ms $easeOutExpo;
    }
}

.modal__header,
.modal__content,
.modal__footer,
.modal__subfooter {
    padding: $spacing-base * 2;

    &:first-child {
        border-radius: $border-radius-base $border-radius-base 0 0;
    }

    &:last-child {
        border-radius: 0 0 $border-radius-base $border-radius-base;
    }
}

.modal__header {
    flex-direction: row;
    justify-content: space-between;

    transition:
        background $transition-base ease,
        color $transition-base ease;
}

.modal__content {
    background: #fff;
}

.modal__content--table {
    padding: 0;
}

.modal__footer {
    flex-direction: row;

    background: darken(#fff, 2%);
    border-top: 1px solid darken(#fff, 5%);

    .modal__footer + & {
        padding-top: 0;
        border-top: 0;
    }
}

.modal__footer--align-center {
    text-align: center;
}

.modal__footer--align-end {
    text-align: right;
}

.modal__subfooter {
    padding: 0 $spacing-base * 2 $spacing-base $spacing-base * 2;

    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;

    background: darken(#fff, 2%);
    color: $color-text-secondary;
}

@each $theme, $colors in $themes {
    $color-primary: map-get($colors, primary);
    $color-primary-text: map-get($colors, primary-text);

    .theme--#{$theme} {
        .modal__header {
            background: $color-primary;
            color: $color-primary-text;
        }
    }
}
